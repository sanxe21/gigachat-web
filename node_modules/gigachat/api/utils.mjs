import { USER_AGENT } from "../constants.mjs";
export function buildHeaders(accessToken) {
    const headers = {};
    if (accessToken) {
        headers['Authorization'] = `Bearer ${accessToken}`;
    }
    if (!isRunningInBrowser()) {
        headers['User-Agent'] = USER_AGENT;
    }
    else {
        headers['X-User-Agent'] = USER_AGENT;
    }
    return headers;
}
export function parseChunk(line) {
    try {
        const [name, value] = line.split(': ');
        if (name === 'data') {
            if (value === '[DONE]') {
                return null;
            }
            else {
                return value ? JSON.parse(value) : null;
            }
        }
    }
    catch (e) {
        console.error(`Error parsing chunk from server: ${e}, raw value: ${line}`);
        throw e;
    }
    return null;
}
export function buildXHeaders(response, data) {
    const headers = response.headers;
    const withXHeaders = {
        xHeaders: {},
    };
    if (headers) {
        withXHeaders.xHeaders = {
            xRequestID: headers['x-request-id'],
            xSessionID: headers['x-session-id'],
            xClientID: headers['x-client-id'],
        };
    }
    return {
        ...data,
        ...withXHeaders,
    };
}
export function isRunningInBrowser() {
    return (
    // @ts-ignore
    typeof window !== 'undefined' &&
        // @ts-ignore
        typeof window.document !== 'undefined' &&
        // @ts-ignore
        typeof navigator !== 'undefined');
}
export { USER_AGENT };
//# sourceMappingURL=utils.mjs.map