import { buildHeaders, buildXHeaders } from "./utils.mjs";
import { AuthenticationError, ResponseError } from "../exceptions.mjs";
function getRequestConfig({ file, purpose = 'general', accessToken }) {
    const headers = buildHeaders(accessToken);
    const formData = new FormData();
    formData.append('file', file);
    formData.append('purpose', purpose);
    return {
        method: 'POST',
        url: '/files',
        data: formData,
        headers: headers,
    };
}
function buildResponse(response) {
    if (response.status === 200) {
        return buildXHeaders(response, response.data);
    }
    else if (response.status === 401) {
        console.error(response.data);
        throw new AuthenticationError(response);
    }
    else {
        console.error(response.data);
        throw new ResponseError(response);
    }
}
export async function post_files(client, args) {
    const config = getRequestConfig(args);
    const response = await client.request(config);
    return buildResponse(response);
}
//# sourceMappingURL=post_files.mjs.map