import { buildHeaders, buildXHeaders } from "./utils.mjs";
import { AuthenticationError, ResponseError } from "../exceptions.mjs";
function getRequestConfig({ accessToken }) {
    const headers = buildHeaders(accessToken);
    return {
        method: 'GET',
        url: '/balance',
        headers: headers,
    };
}
function buildResponse(response) {
    response.headers;
    if (response.status === 200) {
        return buildXHeaders(response, response.data);
    }
    else if (response.status === 401) {
        console.error(response.data);
        throw new AuthenticationError(response);
    }
    else {
        console.error(response.data);
        throw new ResponseError(response);
    }
}
export async function get_balance(client, args) {
    const config = getRequestConfig(args);
    const response = await client.request(config);
    return buildResponse(response);
}
//# sourceMappingURL=get_balance.mjs.map