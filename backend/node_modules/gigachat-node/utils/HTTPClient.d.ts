/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import { RequestOptions } from 'https';
export declare class HTTPClient {
    private baseUrl;
    private authorization;
    private isIgnoreTSL;
    constructor(baseUrl: string, authorization: string | undefined, isIgnoreTSL: boolean);
    setAuthorization(authorization: string): Promise<void>;
    makeRequest(options: RequestOptions, data: string | Buffer, redirectCount?: number, stream?: boolean): Promise<any>;
    /**
     * Выполняет GET-запрос к API.
     * @param {string} path Путь запроса.
     * @param {boolean} isImage Флаг для получения изображения.
     * @returns {Promise<any>} Ответ API.
     */
    get(path: string, isImage?: boolean): Promise<any>;
    /**
     * Выполняет POST-запрос к API.
     * @param {string} path Путь запроса.
     * @param {object} data Данные запроса.
     * @param {boolean} [stream=false] Флаг для потокового ответа.
     * @returns {Promise<any>} Ответ API.
     */
    post(path: string, data: object, stream?: boolean): Promise<any>;
    /**
     * Загружает файл на сервер
     * @param {string} pathToFile Путь до файла.
     * @param {string} purpose Признак использования.
     * @returns {Promise<IFile>} Ответ API.
     */
    postFiles(pathToFile: string, purpose: string): Promise<any>;
}
